"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[830],{6009:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"typr-doc/typr-for-r-users","title":"TypR for R users","description":"Even though the syntax try to be as close as possible to R, there 1 fundamental difference: Semicolons.","source":"@site/docs/typr-doc/typr-for-r-users.md","sourceDirName":"typr-doc","slug":"/typr-doc/typr-for-r-users","permalink":"/typr.github.io/build/docs/typr-doc/typr-for-r-users","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/typr-doc/typr-for-r-users.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Documentation","permalink":"/typr.github.io/build/docs/typr-doc/"},"next":{"title":"Advanced Typr","permalink":"/typr.github.io/build/docs/typr-doc/advanced-typr"}}');var s=r(4848),n=r(8453);const c={sidebar_position:1},i="TypR for R users",a={},d=[{value:"Semicolons",id:"semicolons",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"typr-for-r-users",children:"TypR for R users"})}),"\n",(0,s.jsx)(t.p,{children:"Even though the syntax try to be as close as possible to R, there 1 fundamental difference: Semicolons."}),"\n",(0,s.jsx)(t.h2,{id:"semicolons",children:"Semicolons"}),"\n",(0,s.jsx)(t.p,{children:'Now, each declaration, assignation, expression (except the last one) must finish with a semicolon.\nTypR allow more powerful constructs that needs a marker such as ";" to delimit them.\nIf there is an error, that mean you need to put a semicolon at the end of your expression.'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-R",children:"library(dplyr); # works\nlibrary(dplyr) # doesn't work\n"})}),"\n",(0,s.jsx)(t.h1,{id:"types-and-other-construct",children:"Types and other construct"}),"\n",(0,s.jsx)(t.p,{children:"You don't need to use types, but if you are there, you are probably interested to use them for your project. Each well typed expression will give a specific type in return. Some basic R expression aren't type checkable and will automatically get the \"Empty\" type."}),"\n",(0,s.jsxs)(t.p,{children:["There are also other cool constructs like type declaration, arrays, typed functions, etc. you can use. You can check the ",(0,s.jsx)(t.a,{href:"/typr.github.io/build/docs/typr-doc/advanced-typr",children:"Advanced_TypR"})," page to do so."]})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var o=r(6540);const s={},n=o.createContext(s);function c(e){const t=o.useContext(n);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);