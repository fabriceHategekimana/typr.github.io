"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[830],{6009:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"typr-doc/typr-for-r-users","title":"TypR for R users","description":"Even though the syntax try to be as close as possible to R, there are 3 fundamental differences:","source":"@site/docs/typr-doc/typr-for-r-users.md","sourceDirName":"typr-doc","slug":"/typr-doc/typr-for-r-users","permalink":"/typr.github.io/build/docs/typr-doc/typr-for-r-users","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/typr-doc/typr-for-r-users.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Documentation","permalink":"/typr.github.io/build/docs/typr-doc/"},"next":{"title":"Advanced Typr","permalink":"/typr.github.io/build/docs/typr-doc/advanced-typr"}}');var o=r(4848),s=r(8453);const a={sidebar_position:1},i="TypR for R users",c={},l=[{value:"Semicolons",id:"semicolons",level:2},{value:"Let/mut declarations",id:"letmut-declarations",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"typr-for-r-users",children:"TypR for R users"})}),"\n",(0,o.jsx)(t.p,{children:"Even though the syntax try to be as close as possible to R, there are 3 fundamental differences:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Semicolon"}),"\n",(0,o.jsx)(t.li,{children:"Let/mut declarations"}),"\n",(0,o.jsx)(t.li,{children:"Types and other constructs"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"semicolons",children:"Semicolons"}),"\n",(0,o.jsx)(t.p,{children:'Now, each declaration, assignation, expression (except the last one) must finish with a semicolon.\nTypR allow more powerful constructs that needs a marker such as ";" to delimit them.\nIf there is an error, that mean you need to put a semicolon at the end of your expression.'}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-R",children:"library(dplyr); # works\nlibrary(dplyr) # doesn't work\n"})}),"\n",(0,o.jsx)(t.h2,{id:"letmut-declarations",children:"Let/mut declarations"}),"\n",(0,o.jsxs)(t.p,{children:["If you create a variable for the first time, your need to put a ",(0,o.jsx)(t.code,{children:"let"})," or ",(0,o.jsx)(t.code,{children:"mut"})," keyword.\nIf the with the let keyword, you won't be able to change the value of the variable again. The mut allows you to change the value after it's declaration."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-R",children:"# Won't work since it was not declared previousely\na <- TRUE; \n\n# Works since it's an inital declaration\nlet a <- TRUE;\n\n# Won't work because it's value can't be changed\na <- FALSE;\n\n# Works since it's value can be changed\nmut a <- TRUE;\na <- FALSE;\n"})}),"\n",(0,o.jsx)(t.h1,{id:"types-and-other-construct",children:"Types and other construct"}),"\n",(0,o.jsx)(t.p,{children:"You don't need to use types, but if you are there, you are probably interested to use them for your project. Each well typed expression will give a specific type in return. Some basic R expression aren't type checkable and will automatically get the \"Empty\" type."}),"\n",(0,o.jsxs)(t.p,{children:["There are also other cool construct like type declaration, arrays, typed functions, etc. you can use. You can check the ",(0,o.jsx)(t.a,{href:"/typr.github.io/build/docs/typr-doc/advanced-typr",children:"Advanced_TypR"})," page to do so."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var n=r(6540);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);